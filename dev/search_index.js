var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = WeightedPCA","category":"page"},{"location":"#WeightedPCA:-PCA-for-heterogeneous-quality-samples","page":"Home","title":"WeightedPCA: PCA for heterogeneous quality samples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for WeightedPCA.","category":"page"},{"location":"","page":"Home","title":"Home","text":"ðŸ‘‹ This package provides research code and work is ongoing. If you are interested in using it in your own research, I'd love to hear from you and collaborate! Feel free to write: dahong67@wharton.upenn.edu","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please cite the following paper for this technique:","category":"page"},{"location":"","page":"Home","title":"Home","text":"David Hong, Fan Yang, Jeffrey A. Fessler, Laura Balzano. \"Optimally Weighted PCA for High-Dimensional Heteroscedastic Data\", 2022. https://arxiv.org/abs/1810.12862","category":"page"},{"location":"","page":"Home","title":"Home","text":"In BibTeX form:","category":"page"},{"location":"","page":"Home","title":"Home","text":"@Misc{hyfb2022owp,\n   title  = \"Optimally Weighted PCA for High-Dimensional Heteroscedastic Data\", \n   author = \"David Hong and Fan Yang and Jeffrey A. Fessler and Laura Balzano\",\n   year   = 2022,\n   url    = \"https://arxiv.org/abs/1810.12862\",\n}","category":"page"},{"location":"#Docstrings","page":"Home","title":"Docstrings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [WeightedPCA]","category":"page"},{"location":"#WeightedPCA.WeightedPCA","page":"Home","title":"WeightedPCA.WeightedPCA","text":"Weighted PCA module. Provides weighted principal component analysis (PCA) for data with samples of heterogeneous quality (heteroscedastic noise).\n\n\n\n\n\n","category":"module"},{"location":"#WeightedPCA.AbstractNoiseVarEstimator","page":"Home","title":"WeightedPCA.AbstractNoiseVarEstimator","text":"AbstractNoiseVarEstimator\n\nAbstract supertype for noise variance estimators. Should implement estimatev.\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.AbstractSignalVarEstimator","page":"Home","title":"WeightedPCA.AbstractSignalVarEstimator","text":"AbstractSignalVarEstimator\n\nAbstract supertype for signal variance estimators. Should implement estimateÎ».\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.ComputedWeights","page":"Home","title":"WeightedPCA.ComputedWeights","text":"ComputedWeights\n\nAbstract supertype for weights that are computed from properties of the data.\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.InvNoiseWeightedShrinkageEstimator","page":"Home","title":"WeightedPCA.InvNoiseWeightedShrinkageEstimator","text":"InvNoiseWeightedShrinkageEstimator <: AbstractSignalVarEstimator\n\nInverse noise variance weighted shrinkage-based estimate of signal variances: Î»h[i] = Îž(Î»hinv[i])\n\nÎž(Î») = -(vb+vb/c-Î»)/2 + sqrt((vb+vb/c-Î»)^2-4*vb^2/c)/2 is the shrinkage\nvb = ( Î£_l p[l]/v[l] )^(-1) where p[l] = n[l]/n\nc = n/d is the data aspect ratio\nÎ»hinv = eigvals( Î£_l (1/v[l])/(n[1]/v[1]+â‹¯+n[L]/v[L]) Y[l]*Y[l]' ) are inverse noise variance weighted eigenvalues\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.InverseVarianceWeights","page":"Home","title":"WeightedPCA.InverseVarianceWeights","text":"InverseVarianceWeights <: ComputedWeights\n\nInverse noise variance weighting, i.e., w[l] = 1/v[l].\n\nConstructors\n\nInverseVarianceWeights(v=noisevar) for known noise variances noisevar\nInverseVarianceWeights() for unknown noise variances; noise variances will be estimated from data\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.NoiseNormEstimator","page":"Home","title":"WeightedPCA.NoiseNormEstimator","text":"NoiseNormEstimator <: AbstractNoiseVarEstimator\n\nNorm-based estimate of noise variance: vh[l] = norm(Y[l])^2/length(Y[l])\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.OptimalWeights","page":"Home","title":"WeightedPCA.OptimalWeights","text":"OptimalWeights <: ComputedWeights\n\nOptimal weighting, i.e., w[l] = 1/v[l] * 1/(1+v[l]/Î»).\n\nConstructors\n\nOptimalWeights(v=noisevar,Î»=signalvar) for known noise variances noisevar and signal variance signalvar\nOptimalWeights(Î»=signalvar) for known signal variance signalvar; noise variances will be estimated from data\nOptimalWeights(v=noisevar) for known noise variances noisevar; signal variance will be estimated from data\nOptimalWeights() for unknown noise and signal variances; noise and signal variances will be estimated from data\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.UniformWeights","page":"Home","title":"WeightedPCA.UniformWeights","text":"UniformWeights <: ComputedWeights\n\nUniform weighting, i.e., w[l] = 1. Corresponds to conventional (unweighted) PCA.\n\n\n\n\n\n","category":"type"},{"location":"#WeightedPCA.estimatev","page":"Home","title":"WeightedPCA.estimatev","text":"estimatev(Y,method::AbstractNoiseVarEstimator) -> Vector{<:Real}\n\nEstimate the vector of noise variances from data Y using the estimator method.\n\n\n\n\n\n","category":"function"},{"location":"#WeightedPCA.estimateÎ»","page":"Home","title":"WeightedPCA.estimateÎ»","text":"estimateÎ»(Y,v,method::AbstractSignalVarEstimator)\n\nEstimate the vector of signal variances from data Y using the estimator method.\n\n\n\n\n\n","category":"function"},{"location":"#WeightedPCA.estimateÎ»-Tuple{Any, Integer, Any, WeightedPCA.AbstractSignalVarEstimator}","page":"Home","title":"WeightedPCA.estimateÎ»","text":"estimateÎ»(Y,i,v,method::AbstractSignalVarEstimator)\n\nEstimate the ith signal variance from data Y using the estimator method.\n\n\n\n\n\n","category":"method"},{"location":"#WeightedPCA.wpca","page":"Home","title":"WeightedPCA.wpca","text":"wpca(Y,i,weights=UniformWeights())\n\nCompute ith principal component of data Y via weighted PCA using weights, i.e., output is the ith eigenvector of the weighted sample covariance Î£_l w[l] Y[l]*Y[l]'. Data Y is a list of matrices (each column is a sample).\n\nChoices for weights\n\nUniformWeights() : uniform weights, i.e., w[l] = 1 [default]\nInverseVarianceWeights([v]) : inverse noise variance weights, i.e., w[l] = 1/v[l]\nOptimalWeights([v,Î»]) : optimal weights for signal with variance Î», i.e., w[l] = 1/v[l] * 1/(1+v[l]/Î»)\n\nThe weights can also be manually set by passing in an AbstractVector{<:Real}.\n\nSee also: UniformWeights, InverseVarianceWeights, OptimalWeights.\n\n\n\n\n\n","category":"function"}]
}
